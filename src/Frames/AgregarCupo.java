
package Frames;

import Clases.Agencia;
import Clases.CupoAgencia;
import Clases.CupoAnimal;
import Clases.HoraSorteo;
import Clases.JCheckBoxPrograma;
import Clases.Loteria;
import Clases.ScrollSens;
import Clases.tools;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Cletox
 */
public class AgregarCupo extends javax.swing.JFrame {
    JPanel panelCheckAnimales = new JPanel();
    JPanel panelCheckSorteos = new JPanel();
   ArrayList<JCheckBox> programas = new ArrayList();
   ArrayList<JCheckBoxPrograma> sorteos = new ArrayList();
   ArrayList<Loteria> loterias = new ArrayList();
   ArrayList<JCheckBox> agencias = new ArrayList();
   ArrayList<JCheckBox> animales = new ArrayList();
   ArrayList<Agencia> myAgencias = new ArrayList();
   Font segoui = new Font("Segoe UI",Font.PLAIN,15);
   ArrayList<CupoAnimal> myCupos = new ArrayList();
   
    public AgregarCupo() {
        initComponents();
        iniciar();
    }
     public AgregarCupo(ArrayList<Agencia> agencias) {
        initComponents();
        this.myAgencias=agencias;
        iniciar();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCentral = new javax.swing.JPanel();
        panelAgencias = new javax.swing.JPanel();
        cbAgTodos = new javax.swing.JCheckBox();
        panelTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelAnimales = new javax.swing.JPanel();
        cbAnimalesTodos = new javax.swing.JCheckBox();
        txtBusqueda = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        panelSorteos = new javax.swing.JPanel();
        cbSorteoTodos = new javax.swing.JCheckBox();
        txtBusquedaSorteos = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        panelMonto = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        fechaDesde = new com.toedter.calendar.JDateChooser();
        fechaHasta = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        scrollAnimales = new javax.swing.JScrollPane();
        scrollSorteos = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelCentral.setBackground(new java.awt.Color(255, 255, 255));
        panelCentral.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        cbAgTodos.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbAgTodos.setText("Todas las Agencias");
        cbAgTodos.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        cbAgTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAgTodosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelAgenciasLayout = new javax.swing.GroupLayout(panelAgencias);
        panelAgencias.setLayout(panelAgenciasLayout);
        panelAgenciasLayout.setHorizontalGroup(
            panelAgenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbAgTodos, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAgenciasLayout.setVerticalGroup(
            panelAgenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbAgTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTitulo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Agregar cupos");

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        cbAnimalesTodos.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbAnimalesTodos.setText("Todos los animales");
        cbAnimalesTodos.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        cbAnimalesTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAnimalesTodosItemStateChanged(evt);
            }
        });

        txtBusqueda.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/add-button.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAnimalesLayout = new javax.swing.GroupLayout(panelAnimales);
        panelAnimales.setLayout(panelAnimalesLayout);
        panelAnimalesLayout.setHorizontalGroup(
            panelAnimalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAnimalesLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(panelAnimalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbAnimalesTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAnimalesLayout.createSequentialGroup()
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelAnimalesLayout.setVerticalGroup(
            panelAnimalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAnimalesLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(cbAnimalesTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(panelAnimalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAnimalesLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbSorteoTodos.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbSorteoTodos.setText("Todos los sorteos");
        cbSorteoTodos.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        cbSorteoTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSorteoTodosItemStateChanged(evt);
            }
        });

        txtBusquedaSorteos.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtBusquedaSorteos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBusquedaSorteos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaSorteosKeyReleased(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/add-button.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSorteosLayout = new javax.swing.GroupLayout(panelSorteos);
        panelSorteos.setLayout(panelSorteosLayout);
        panelSorteosLayout.setHorizontalGroup(
            panelSorteosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSorteosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSorteosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSorteoTodos, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addGroup(panelSorteosLayout.createSequentialGroup()
                        .addComponent(txtBusquedaSorteos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        panelSorteosLayout.setVerticalGroup(
            panelSorteosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSorteosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbSorteoTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSorteosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBusquedaSorteos)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Desde");

        txtMonto.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtMonto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoKeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Monto del Cupo");

        fechaDesde.setDateFormatString("yyyy-MM-dd");
        fechaDesde.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        fechaHasta.setDateFormatString("yyyy-MM-dd");
        fechaHasta.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hasta");

        javax.swing.GroupLayout panelMontoLayout = new javax.swing.GroupLayout(panelMonto);
        panelMonto.setLayout(panelMontoLayout);
        panelMontoLayout.setHorizontalGroup(
            panelMontoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMontoLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(panelMontoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMontoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMonto)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fechaDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fechaHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelMontoLayout.setVerticalGroup(
            panelMontoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMontoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addComponent(panelAgencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAnimales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollAnimales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSorteos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollSorteos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAgencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panelSorteos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelAnimales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollAnimales)
                            .addComponent(scrollSorteos))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbAgTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAgTodosItemStateChanged
     
        agencias.stream().forEach(t->{
            t.setSelected(cbAgTodos.isSelected());
        });
        
    }//GEN-LAST:event_cbAgTodosItemStateChanged

    private void cbSorteoTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSorteoTodosItemStateChanged
      sorteos.stream()
        .forEach(t->{
            t.setSelected(cbSorteoTodos.isSelected());
        });
    }//GEN-LAST:event_cbSorteoTodosItemStateChanged

    private void cbAnimalesTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAnimalesTodosItemStateChanged
      animales.stream()
        .forEach(t->{
            t.setSelected(cbAnimalesTodos.isSelected());
        });
     
    }//GEN-LAST:event_cbAnimalesTodosItemStateChanged

    private void txtMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyPressed
      
    }//GEN-LAST:event_txtMontoKeyPressed

    private void txtMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyTyped
      new tools().soloNumerosyCantidadDigitos(evt, txtMonto, 1);
    }//GEN-LAST:event_txtMontoKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      if(!validarCamposVacios()){
          JOptionPane.showMessageDialog(panelMonto, "Debe seleccionar al menos:\n"
                  + " A) 1 Agencia\n"
                  + " B) 1 Sorteo\n"
                  + " C) 1 Programa\n"
                  + " D) 1 Animal\n"
                  + " E) Ingresar el monto\n\n"
                  + "Si no cumple con eso no podrá continuar");
      }else{
          double monto = Double.parseDouble(txtMonto.getText());
          String programaSeleccionado = "-";//getProgramasSeleccionadas();
          String animalesSeleccionado = getAnimalesSeleccionadas();
          String sorteosSeleccionados = getSorteosSeleccionadas();
          
          String fechaDesdex = getFechaDesde();
          String fechaHastax = getFechaHasta();
          
          
           myCupos =  (ArrayList) new CupoAnimal().getCupoAgenciaByRangoFecha(fechaDesdex, fechaHastax);
       
           
          
          for(JCheckBox agenc : agencias.stream().filter(t->t.isSelected()).collect(Collectors.toList())){
                int idAgencia = Integer.parseInt(agenc.getName());
                new CupoAgencia().insertCupo(
                        idAgencia,
                        "Especifico",
                        monto, 
                        fechaDesdex,
                        fechaHastax,
                        programaSeleccionado,
                        sorteosSeleccionados,
                        animalesSeleccionado
                );
          }
          
          
          
          while(fechaDesde.getDate().compareTo(fechaHasta.getDate()) <= 0){
              JSONArray x = procesarVendidos(getFechaDesde());
              
              new CupoAnimal().actualizarCupo(
                      x
              );
              fechaDesde.setDate(new tools().sumarDiasFechaDate(fechaDesde.getDate(), 1));
          }
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          JOptionPane.showMessageDialog(panelMonto, "Información agregada con éxito");
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
       
    }//GEN-LAST:event_txtBusquedaKeyTyped
private JSONArray procesarVendidos(String fecha){
        JSONArray jsonCupos = new JSONArray();
        
        agencias.stream()
            .filter(t->
                t.isSelected()
            ).forEach(ag->{
                int idAgencia= Integer.parseInt(ag.getName());
                sorteos.stream()
                .filter(t->t.isSelected())
                .forEach(sorteo->{
                    String separador = Pattern.quote(" ");
                    String[] valores = sorteo.getText().split(separador);
                    String programa = valores[0];
                    String mySorteo = valores[1]+" "+valores[2];

                    myCupos.stream().filter(t->
                            t.getPrograma().equalsIgnoreCase(programa) &&
                            t.getSorteo().equalsIgnoreCase(mySorteo) &&
                            t.getFecha().equalsIgnoreCase(fecha) &&
                            Float.compare(t.getIdAgencia(),idAgencia) == 0
                    ).forEach(cupo -> {
                        JSONObject vendido = new JSONObject();
                        double monto = Double.parseDouble(txtMonto.getText());
                        vendido = new JSONObject();
                        vendido.put("p_idx", cupo.getId());
                         for(JCheckBox anm :  animales.stream().filter(anm->anm.isSelected()).collect(Collectors.toList())){
                            cupo = cupo.setVendido(anm.getName(), monto);  
                        }
                        
                        vendido.put("p_animal_0", cupo.getAnimal_0() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_0() );
                        vendido.put("p_animal_00", cupo.getAnimal_00() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_00() );
                        vendido.put("p_animal_1", cupo.getAnimal_1() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_1() );
                        vendido.put("p_animal_2", cupo.getAnimal_2() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_2() );
                        vendido.put("p_animal_3", cupo.getAnimal_3() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_3() );
                        vendido.put("p_animal_4", cupo.getAnimal_4() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_4() );
                        vendido.put("p_animal_5", cupo.getAnimal_5() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_5() );
                        vendido.put("p_animal_6", cupo.getAnimal_6() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_6() );
                        vendido.put("p_animal_7", cupo.getAnimal_7() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_7() );
                        vendido.put("p_animal_8", cupo.getAnimal_8() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_8() );
                        vendido.put("p_animal_9", cupo.getAnimal_9() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_9() );
                        vendido.put("p_animal_10", cupo.getAnimal_10() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_10() );
                        vendido.put("p_animal_11", cupo.getAnimal_11() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_11() );
                        vendido.put("p_animal_12", cupo.getAnimal_12() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_12() );
                        vendido.put("p_animal_13", cupo.getAnimal_13() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_13() );
                        vendido.put("p_animal_14", cupo.getAnimal_14() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_14() );
                        vendido.put("p_animal_15", cupo.getAnimal_15() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_15() );
                        vendido.put("p_animal_16", cupo.getAnimal_16() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_16() );
                        vendido.put("p_animal_17", cupo.getAnimal_17() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_17() );
                        vendido.put("p_animal_18", cupo.getAnimal_18() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_18() );
                        vendido.put("p_animal_19", cupo.getAnimal_19() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_19() );
                        vendido.put("p_animal_20", cupo.getAnimal_20() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_20() );
                        vendido.put("p_animal_21", cupo.getAnimal_21() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_21() );
                        vendido.put("p_animal_22", cupo.getAnimal_22() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_22() );
                        vendido.put("p_animal_23", cupo.getAnimal_23() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_23() );
                        vendido.put("p_animal_24", cupo.getAnimal_24() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_24() );
                        vendido.put("p_animal_25", cupo.getAnimal_25() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_25() );
                        vendido.put("p_animal_26", cupo.getAnimal_26() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_26() );
                        vendido.put("p_animal_27", cupo.getAnimal_27() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_27() );
                        vendido.put("p_animal_28", cupo.getAnimal_28() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_28() );
                        vendido.put("p_animal_29", cupo.getAnimal_29() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_29() );
                        vendido.put("p_animal_30", cupo.getAnimal_30() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_30() );
                        vendido.put("p_animal_31", cupo.getAnimal_31() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_31() );
                        vendido.put("p_animal_32", cupo.getAnimal_32() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_32() );
                        vendido.put("p_animal_33", cupo.getAnimal_33() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_33() );
                        vendido.put("p_animal_34", cupo.getAnimal_34() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_34() );
                        vendido.put("p_animal_35", cupo.getAnimal_35() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_35() );
                        vendido.put("p_animal_36", cupo.getAnimal_36() >= cupo.getMaximo() ? cupo.getMaximo() : cupo.getAnimal_36() );
                        
                        jsonCupos.put(vendido);
                    });
                });
            });
        
        
        return jsonCupos;
    }
    public Map<String,Double> setearAnimal(int valor, double newAnimalValue, double actualValor,double valueMaximo){
        Map<String,Double> rsp = new HashMap<>();
        String key = "p_animal_" + valor;
        switch(valor){
            
      
        }
        return rsp;
    }





    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
       panelCheckAnimales = new JPanel();
       panelCheckAnimales.setLayout(new BoxLayout(panelCheckAnimales, BoxLayout.Y_AXIS));
        String texto = txtBusqueda.getText().toLowerCase();
       animales.stream().filter(a->
               a.getText().toLowerCase().contains(texto)
       ).collect(Collectors.toList())
         .stream().forEach(t->{
            panelCheckAnimales.add(t);
         });
       scrollAnimales.setViewportView(panelCheckAnimales);
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String texto = txtBusqueda.getText().toLowerCase();
        
       animales.stream().filter(a->
               a.getText().toLowerCase().contains(texto)
       ).collect(Collectors.toList())
        .stream().forEach(t->{
            t.setSelected(true);
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       String texto = txtBusquedaSorteos.getText().toLowerCase();

       sorteos.stream().filter(a->
               a.getText().toLowerCase().contains(texto)
       ).collect(Collectors.toList())
         .stream().forEach(t->{
            t.setSelected(true);
         });
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtBusquedaSorteosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaSorteosKeyReleased
      String texto = txtBusquedaSorteos.getText().toLowerCase();
      panelCheckSorteos = new JPanel();
       panelCheckSorteos.setLayout(new BoxLayout(panelCheckSorteos, BoxLayout.Y_AXIS));
       sorteos.stream().filter(a->
               a.getText().toLowerCase().contains(texto)
       ).collect(Collectors.toList())
         .stream().forEach(t->{
            panelCheckSorteos.add(t);
         });
       scrollSorteos.setViewportView(panelCheckSorteos);
    }//GEN-LAST:event_txtBusquedaSorteosKeyReleased

    private String getAgenciasSeleccionadas(){
        String agenciaSeleccionada ="";
              for(JCheckBox agenc : agencias){
                  if(agenc.isSelected())
                  agenciaSeleccionada+=agenc.getName()+",";
              }agenciaSeleccionada = agenciaSeleccionada.substring(0, agenciaSeleccionada.length()-1);
              
          return agenciaSeleccionada;
    }
    
    private String getProgramasSeleccionadas(){
        String programaSeleccionado = "Todos";
          if(programas.stream().filter(a->a.isSelected()).count()<programas.size()){
              programaSeleccionado="";
              for(JCheckBox program : programas){
                  if(program.isSelected())
                  programaSeleccionado+=program.getText()+",";
              }programaSeleccionado = programaSeleccionado.substring(0, programaSeleccionado.length()-1);
          }
          return programaSeleccionado;
    }
    
    private String getAnimalesSeleccionadas(){
        String animalesSeleccionado = "Todos";
          if(animales.stream().filter(a->a.isSelected()).count()<animales.size()){
              animalesSeleccionado="";
              for(JCheckBox animal : animales){
                  if(animal.isSelected())
                  animalesSeleccionado+=animal.getText()+",";
              }animalesSeleccionado = animalesSeleccionado.substring(0, animalesSeleccionado.length()-1);
          }
          return animalesSeleccionado;
    }
    
    private String getSorteosSeleccionadas(){
        String sorteosSeleccionados = "Todos";
          if(sorteos.stream().filter(a->a.isSelected()).count()<sorteos.size()){
              sorteosSeleccionados="";
              for(JCheckBox sorteo : sorteos){
                   if(sorteo.isSelected())
                  sorteosSeleccionados+=sorteo.getText()+",";
              }sorteosSeleccionados = sorteosSeleccionados.substring(0, sorteosSeleccionados.length()-1);
          }
          return sorteosSeleccionados;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarCupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarCupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarCupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarCupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarCupo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbAgTodos;
    private javax.swing.JCheckBox cbAnimalesTodos;
    private javax.swing.JCheckBox cbSorteoTodos;
    private com.toedter.calendar.JDateChooser fechaDesde;
    private com.toedter.calendar.JDateChooser fechaHasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel panelAgencias;
    private javax.swing.JPanel panelAnimales;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelMonto;
    private javax.swing.JPanel panelSorteos;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JScrollPane scrollAnimales;
    private javax.swing.JScrollPane scrollSorteos;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtBusquedaSorteos;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables

     public String getAnimal(int numero) {
        String animal = "";

        if (true) {
            switch (numero) {
                case 0:
                    animal = "Delfín";
                    break;
                case -1:
                    animal = "Ballena";
                    break;
                case 1:
                    animal = "Carnero";
                    break;
                case 2:
                    animal = "Toro";
                    break;
                case 3:
                    animal = "Ciempies";
                    break;
                case 4:
                    animal = "Alacrán";
                    break;
                case 5:
                    animal = "León";
                    break;
                case 6:
                    animal = "Rana";
                    break;
                case 7:
                    animal = "Perico";
                    break;
                case 8:
                    animal = "Ratón";
                    break;
                case 9:
                    animal = "Águila";
                    break;
                case 10:
                    animal = "Tigre";
                    break;
                case 11:
                    animal = "Gato";
                    break;
                case 12:
                    animal = "Caballo";
                    break;
                case 13:
                    animal = "Mono";
                    break;
                case 14:
                    animal = "Paloma";
                    break;
                case 15:
                    animal = "Zorro";
                    break;
                case 16:
                    animal = "Oso";
                    break;
                case 17:
                    animal = "Pavo";
                    break;
                case 18:
                    animal = "Burro";
                    break;
                case 19:
                    animal = "Chivo";
                    break;
                case 20:
                    animal = "Cochino";
                    break;
                case 21:
                    animal = "Gallo";
                    break;
                case 22:
                    animal = "Camello";
                    break;
                case 23:
                    animal = "Cebra";
                    break;
                case 24:
                    animal = "Iguana";
                    break;
                case 25:
                    animal = "Gallina";
                    break;
                case 26:
                    animal = "Vaca";
                    break;
                case 27:
                    animal = "Perro";
                    break;
                case 28:
                    animal = "Zamuro";
                    break;
                case 29:
                    animal = "Elefante";
                    break;
                case 30:
                    animal = "Caimán";
                    break;
                case 31:
                    animal = "Lapa";
                    break;
                case 32:
                    animal = "Ardilla";
                    break;
                case 33:
                    animal = "Pescado";
                    break;
                case 34:
                    animal = "Venado";
                    break;
                case 35:
                    animal = "Jirafa";
                    break;
                case 36:
                    animal = "Culebra";
                    break;
            }
        }
        return animal;
    }
    
    private void iniciar() {
         String myFecha = new SimpleDateFormat("yyyy-MM-DD").format(new Date());
        
        
        if(myAgencias.isEmpty()){
            myAgencias = (ArrayList) new Agencia().listarAgencias().clone();
            
        }
        
        fechaDesde.setDate(new Date());
        fechaHasta.setDate(new Date());
        
        new ScrollSens(scrollAnimales,40);
        panelAgencias.setLayout(new BoxLayout(panelAgencias, BoxLayout.Y_AXIS));
        panelSorteos.setLayout(new BoxLayout(panelSorteos, BoxLayout.Y_AXIS));
        panelAnimales.setLayout(new BoxLayout(panelAnimales, BoxLayout.Y_AXIS));
        
        panelAgencias.setSize(220, panelAgencias.getHeight());
        panelSorteos.setSize(220, panelSorteos.getHeight());
        panelAnimales.setSize(220, panelAnimales.getHeight());
        
        agregarAgencias();
        agregarAnimales();
        agregarSorteos();
    }
   
   
    private void agregarAgencias(){
        
         
         
         for(Agencia agencia:myAgencias){
             JCheckBox temp = new JCheckBox();
             temp.setName(agencia.getId()+"");
             temp.setText(agencia.getNombreAgencia());
             temp.setName(agencia.getId()+"");
             temp.setFont(segoui);
             agencias.add(temp);
             panelAgencias.add(temp);
         }
    }
    
   
    
    private void agregarAnimales(){
        
        ActionListener listener = e -> {
            cbAnimalesTodos.setSelected(
                    animales.stream()
                    .filter(
                        p ->p.isSelected()
                    ).count() == animales.size() ? true : false
                );
        };
        
        JCheckBox ballena = new JCheckBox();
        ballena.setText("00Ballena");
        ballena.setName("00");
        ballena.addActionListener(listener);
        ballena.setFont(segoui);
        
        animales.add(ballena);
        panelCheckAnimales.add(ballena);
        
        panelCheckAnimales.setLayout(new BoxLayout(panelCheckAnimales, BoxLayout.Y_AXIS));
        for (int i = 0; i < 37; i++) {
            JCheckBox temp = new JCheckBox();
            temp.setName(i+"");
            temp.setText(i+getAnimal(i));
            temp.addActionListener(listener);
            temp.setFont(segoui);
            
            panelCheckAnimales.add(temp);
            animales.add(temp);
        }
        panelCheckAnimales.setSize(panelAnimales.getWidth()-10, 500);
        scrollAnimales.setViewportView(panelCheckAnimales);
    }

    private boolean validarCamposVacios() {
         return agencias.stream().filter(a-> a.isSelected()).count()>0 &&
                 animales.stream().filter(a-> a.isSelected()).count()>0 &&
                 sorteos.stream().filter(s-> s.isSelected()).count()>0 &&
                 !txtMonto.getText().isEmpty();
    }
    public String getFechaDesde(){
        return new SimpleDateFormat("yyyy-MM-dd").format(fechaDesde.getDate());
    }
    public String getFechaHasta(){
        return new SimpleDateFormat("yyyy-MM-dd").format(fechaHasta.getDate());
    }

    private void agregarSorteos() {
        new ScrollSens(scrollSorteos,24);
        panelCheckSorteos.setLayout(new BoxLayout(panelCheckSorteos, BoxLayout.Y_AXIS));
        loterias = (ArrayList) new Loteria().getLoterias().clone();
        sorteos.clear();
        
        for(Loteria loteria:loterias){panelCheckSorteos.add(new JLabel("    "));
            for(HoraSorteo horaSorteo : loteria.getSorteos()){
                JCheckBoxPrograma temp = new JCheckBoxPrograma();
                temp.setFont(new Font("Segoe UI",Font.PLAIN,16));
                temp.setSize(120, 22);
                String completo = loteria.getNombre()+" "+horaSorteo.getHoraSorteo();
                temp.setText(completo);
                temp.setName(horaSorteo.getHoraSorteo());
                temp.setPrograma(loteria.getNombre());  
                sorteos.add(temp);
                panelCheckSorteos.add(temp);
            }
            
        }
        panelCheckSorteos.add(new JLabel("    "));
        panelCheckSorteos.add(new JLabel("    "));
        scrollSorteos.setViewportView(panelCheckSorteos);
    }
}
